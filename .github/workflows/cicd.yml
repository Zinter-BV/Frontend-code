name: zinter frontend Pipeline

on:
  push:
    branches: [main]
  workflow_dispatch:
  # pull_request:
  #   branches:
  #     - cicd
jobs:
  build_and_push:
    name: Continuous Integration - Build and Push
    runs-on: ubuntu-latest
  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build container image
        run: docker build -t ${{ secrets.REGISTRY_NAME }}/zinter-app-frontend:${{ github.run_number }} .

      - name: Log in to Docker Registry with short-lived credentials
        run: docker login -u ${{ secrets.REGISTRY_NAME }} --password ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push image to Docker Registry
        run: docker push ${{ secrets.REGISTRY_NAME }}/zinter-app-frontend:${{ github.run_number }}

      - name: Clean up Docker image locally
        run: docker rmi ${{ secrets.REGISTRY_NAME }}/zinter-app-frontend:${{ github.run_number }}

      - name: Clean up GitHub repo on runner
        run: rm -rf ./*

  deploy:
    name: Continuous Deployment
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Update the Kubernetes Deployment file
        run: |
          cat deployment/deploy.yaml
          sed -i "s+zinterapp/zinter-app-frontend:.*+zinterapp/zinter-app-frontend:${{ github.run_number }}+g" deployment/deploy.yaml
          cat deployment/deploy.yaml

      - name: Authenticate to Azure Cloud via Azure CLI
        run: |
          az login --service-principal \
            --username ${{ secrets.AZURE_CLIENT_ID }} \
            --password ${{ secrets.AZURE_CLIENT_SECRET }} \
            --tenant ${{ secrets.AZURE_TENANT_ID }}

          az aks get-credentials \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --name ${{ secrets.AKS_CLUSTER }} \
            --file aks-config.yaml

          export KUBECONFIG=aks-config.yaml

          kubectl apply -f deployment
          kubectl get pods
